// you can use includes, for example:
// #include <algorithm>

// you can write to stdout for debugging purposes, e.g.
// cout << "this is a debug message" << endl;

int solution(vector<int> &A) {
    // write your code in C++14 (g++ 6.2.0)
    unsigned int JumpNo = 1;
    unsigned int diff = 10000000;
    unsigned int diff_even = 10000000;
    unsigned int nj = 0;

    bool updateStatus = false;
    unsigned int j = 0;
    unsigned int k = j+2;
    int count = 0;


    while(j < A.size() - 2 ){
        if((JumpNo%2 == 1) && (A.at(j) < A.at(k)) && ( A.at(k) - A.at(j) < diff)){
                diff =  A.at(k) - A.at(j);

                 nj = k;
                updateStatus = true;
            }

            else if ((JumpNo%2 == 0) && (A.at(k) < A.at(j)) && ( A.at(j) - A.at(k) < diff)){
                diff =  A.at(j) - A.at(k);
                nj = k;
                updateStatus = true;
            }

            if(k< A.size()-2) {
                k+= 2;
                if(updateStatus) JumpNo++;

                updateStatus = false;
            }
            else {
                diff = 100000;
                if(nj == 4) count++;
                j++;
                k = j+2;
                }
    }




    return JumpNo;
}



// you can use includes, for example:
// #include <algorithm>
#include <vector>
// you can write to stdout for debugging purposes, e.g.
// cout << "this is a debug message" << endl;

int solution(vector<int> &S, vector<int> &E) {
    // write your code in C++14 (g++ 6.2.0)
    vector <int> chairs;
    unsigned int i, k = 0;

    for (i = 0; i < S.size(); i++){
        if(S.at(i) > k) k = S.at(i);
    }
    return k;

    for(int j = 1; j < k; j++){
        for(int l = 0; l < S.size(); l++){
            if(S.at(l) == j){
                // entry of user
                chairs.push_back(1);
            }
            if(E.at(l) == j){
                chairs.erase(chairs.begin());
            }
        }
    }

    return chairs.size();


}